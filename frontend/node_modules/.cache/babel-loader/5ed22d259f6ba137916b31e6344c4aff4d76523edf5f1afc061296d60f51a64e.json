{"ast":null,"code":"var _jsxFileName = \"e:\\\\Placement\\\\live-polling-system\\\\live-polling-system\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport API_URL from \"./config\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useInterval(callback, delay) {\n  _s();\n  const savedRef = useRef();\n  useEffect(() => {\n    savedRef.current = callback;\n  }, [callback]);\n  useEffect(() => {\n    if (delay == null) return;\n    const id = setInterval(() => savedRef.current(), delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n_s(useInterval, \"w5A6FRbWPY8OWfdgwNZfZKbZH74=\");\nexport default function App() {\n  _s2();\n  const [role, setRole] = useState(() => localStorage.getItem(\"role\") || \"\");\n  const [name, setName] = useState(() => localStorage.getItem(\"name\") || \"\");\n  const [students, setStudents] = useState([]);\n  const [polls, setPolls] = useState([]);\n  const [activePollId, setActivePollId] = useState(null);\n  const [messages, setMessages] = useState([]);\n\n  // teacher inputs\n  const [qText, setQText] = useState(\"\");\n  const [options, setOptions] = useState([\"\", \"\"]);\n  const [duration, setDuration] = useState(60);\n\n  // chat\n  const [chatText, setChatText] = useState(\"\");\n\n  // derived states\n  const activePoll = useMemo(() => polls.find(p => String(p._id) === String(activePollId)) || null, [polls, activePollId]);\n  const userHasAnsweredActive = useMemo(() => {\n    if (!activePoll || !name) return false;\n    return !!(activePoll.answers || []).find(a => a.studentName === name);\n  }, [activePoll, name]);\n  const secondsLeft = useMemo(() => {\n    if (!activePoll) return 0;\n    const end = new Date(activePoll.createdAt).getTime() + (Number(activePoll.durationSeconds) || 0) * 1000;\n    return Math.max(0, Math.ceil((end - Date.now()) / 1000));\n  }, [activePoll]);\n\n  // ---------- Load State ----------\n  async function loadState() {\n    try {\n      const res = await fetch(`${API_URL}/api/state`);\n      if (!res.ok) throw new Error(\"state fetch failed\");\n      const data = await res.json();\n      setStudents(data.students || []);\n      setPolls(data.polls || []);\n      setActivePollId(data.activePollId || null);\n      setMessages(data.messages || []);\n    } catch (e) {\n      console.warn(\"loadState failed\", e);\n    }\n  }\n  useEffect(() => {\n    loadState();\n  }, []);\n  useInterval(loadState, 1500);\n\n  // ---------- Student Join ----------\n  async function joinAsStudent() {\n    if (!name.trim()) return alert(\"Enter your name\");\n    try {\n      await fetch(`${API_URL}/api/students`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: name.trim()\n        })\n      });\n      localStorage.setItem(\"role\", \"student\");\n      localStorage.setItem(\"name\", name.trim());\n      setRole(\"student\");\n    } catch (e) {\n      console.warn(\"join error\", e);\n    }\n  }\n\n  // ---------- Teacher Create Poll ----------\n  async function createPoll() {\n    const cleaned = options.map(o => o.trim()).filter(Boolean);\n    if (!qText.trim() || cleaned.length < 2) return alert(\"Enter question and at least 2 options\");\n    try {\n      await fetch(`${API_URL}/api/polls`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          question: qText.trim(),\n          options: cleaned,\n          durationSeconds: duration\n        })\n      });\n      setQText(\"\");\n      setOptions([\"\", \"\"]);\n      setDuration(60);\n    } catch (e) {\n      console.warn(\"poll error\", e);\n    }\n  }\n\n  // ---------- Vote ----------\n  async function vote(pollId, optionIndex) {\n    try {\n      await fetch(`${API_URL}/api/answers`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          pollId,\n          optionIndex,\n          studentName: name\n        })\n      });\n    } catch (e) {\n      console.warn(\"vote error\", e);\n    }\n  }\n\n  // ---------- Kick ----------\n  async function kick(n) {\n    await fetch(`${API_URL}/api/kick`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: n\n      })\n    });\n  }\n\n  // ---------- Chat ----------\n  async function sendChat() {\n    if (!chatText.trim()) return;\n    await fetch(`${API_URL}/api/messages`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name || role,\n        text: chatText.trim()\n      })\n    });\n    setChatText(\"\");\n  }\n\n  // ---------- UI ----------\n  function Landing() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to the Live Polling System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"muted\",\n        children: \"Please select your role\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"role-cards\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"role-card\",\n          onClick: () => setRole(\"student\"),\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"I\\u2019m a Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"role-card\",\n          onClick: () => setRole(\"teacher\"),\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"I\\u2019m a Teacher\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n  function StudentEnterName() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel center-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enter your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        placeholder: \"e.g., Rahul Bajaj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"primary\",\n        onClick: joinAsStudent,\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this);\n  }\n  function StudentPage() {\n    if (!activePoll) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waiting for teacher to start a poll\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 29\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: activePoll.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), activePoll.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        disabled: userHasAnsweredActive,\n        onClick: () => vote(activePoll._id, i),\n        children: opt\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this);\n  }\n  function TeacherPage() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"textarea\",\n        value: qText,\n        onChange: e => setQText(e.target.value),\n        placeholder: \"Your question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        value: opt,\n        onChange: e => {\n          const arr = [...options];\n          arr[i] = e.target.value;\n          setOptions(arr);\n        },\n        placeholder: `Option ${i + 1}`\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"ghost\",\n        onClick: () => setOptions([...options, \"\"]),\n        children: \"+ Add Option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"primary\",\n        onClick: createPoll,\n        children: \"Ask Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Main render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!role && /*#__PURE__*/_jsxDEV(Landing, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }, this), role === \"student\" && !name && /*#__PURE__*/_jsxDEV(StudentEnterName, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 39\n    }, this), role === \"student\" && name && /*#__PURE__*/_jsxDEV(StudentPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 38\n    }, this), role === \"teacher\" && /*#__PURE__*/_jsxDEV(TeacherPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"icHdwdRWif0LEfad2mBSQ6Yl2cQ=\", false, function () {\n  return [useInterval];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","API_URL","jsxDEV","_jsxDEV","useInterval","callback","delay","_s","savedRef","current","id","setInterval","clearInterval","App","_s2","role","setRole","localStorage","getItem","name","setName","students","setStudents","polls","setPolls","activePollId","setActivePollId","messages","setMessages","qText","setQText","options","setOptions","duration","setDuration","chatText","setChatText","activePoll","find","p","String","_id","userHasAnsweredActive","answers","a","studentName","secondsLeft","end","Date","createdAt","getTime","Number","durationSeconds","Math","max","ceil","now","loadState","res","fetch","ok","Error","data","json","e","console","warn","joinAsStudent","trim","alert","method","headers","body","JSON","stringify","setItem","createPoll","cleaned","map","o","filter","Boolean","length","question","vote","pollId","optionIndex","kick","n","sendChat","text","Landing","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","StudentEnterName","value","onChange","target","placeholder","StudentPage","opt","i","disabled","TeacherPage","arr","_c","$RefreshReg$"],"sources":["e:/Placement/live-polling-system/live-polling-system/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport API_URL from \"./config\";\nimport \"./App.css\";\n\nfunction useInterval(callback, delay) {\n  const savedRef = useRef();\n  useEffect(() => { savedRef.current = callback; }, [callback]);\n  useEffect(() => {\n    if (delay == null) return;\n    const id = setInterval(() => savedRef.current(), delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport default function App() {\n  const [role, setRole] = useState(() => localStorage.getItem(\"role\") || \"\");\n  const [name, setName] = useState(() => localStorage.getItem(\"name\") || \"\");\n  const [students, setStudents] = useState([]);\n  const [polls, setPolls] = useState([]);\n  const [activePollId, setActivePollId] = useState(null);\n  const [messages, setMessages] = useState([]);\n\n  // teacher inputs\n  const [qText, setQText] = useState(\"\");\n  const [options, setOptions] = useState([\"\", \"\"]);\n  const [duration, setDuration] = useState(60);\n\n  // chat\n  const [chatText, setChatText] = useState(\"\");\n\n  // derived states\n  const activePoll = useMemo(\n    () => polls.find(p => String(p._id) === String(activePollId)) || null,\n    [polls, activePollId]\n  );\n\n  const userHasAnsweredActive = useMemo(() => {\n    if (!activePoll || !name) return false;\n    return !!(activePoll.answers || []).find(a => a.studentName === name);\n  }, [activePoll, name]);\n\n  const secondsLeft = useMemo(() => {\n    if (!activePoll) return 0;\n    const end = new Date(activePoll.createdAt).getTime() + (Number(activePoll.durationSeconds) || 0) * 1000;\n    return Math.max(0, Math.ceil((end - Date.now()) / 1000));\n  }, [activePoll]);\n\n  // ---------- Load State ----------\n  async function loadState() {\n    try {\n      const res = await fetch(`${API_URL}/api/state`);\n      if (!res.ok) throw new Error(\"state fetch failed\");\n      const data = await res.json();\n      setStudents(data.students || []);\n      setPolls(data.polls || []);\n      setActivePollId(data.activePollId || null);\n      setMessages(data.messages || []);\n    } catch (e) {\n      console.warn(\"loadState failed\", e);\n    }\n  }\n\n  useEffect(() => { loadState(); }, []);\n  useInterval(loadState, 1500);\n\n  // ---------- Student Join ----------\n  async function joinAsStudent() {\n    if (!name.trim()) return alert(\"Enter your name\");\n    try {\n      await fetch(`${API_URL}/api/students`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ name: name.trim() })\n      });\n      localStorage.setItem(\"role\", \"student\");\n      localStorage.setItem(\"name\", name.trim());\n      setRole(\"student\");\n    } catch (e) {\n      console.warn(\"join error\", e);\n    }\n  }\n\n  // ---------- Teacher Create Poll ----------\n  async function createPoll() {\n    const cleaned = options.map(o => o.trim()).filter(Boolean);\n    if (!qText.trim() || cleaned.length < 2) return alert(\"Enter question and at least 2 options\");\n    try {\n      await fetch(`${API_URL}/api/polls`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ question: qText.trim(), options: cleaned, durationSeconds: duration })\n      });\n      setQText(\"\");\n      setOptions([\"\", \"\"]);\n      setDuration(60);\n    } catch (e) {\n      console.warn(\"poll error\", e);\n    }\n  }\n\n  // ---------- Vote ----------\n  async function vote(pollId, optionIndex) {\n    try {\n      await fetch(`${API_URL}/api/answers`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ pollId, optionIndex, studentName: name })\n      });\n    } catch (e) { console.warn(\"vote error\", e); }\n  }\n\n  // ---------- Kick ----------\n  async function kick(n) {\n    await fetch(`${API_URL}/api/kick`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ name: n })\n    });\n  }\n\n  // ---------- Chat ----------\n  async function sendChat() {\n    if (!chatText.trim()) return;\n    await fetch(`${API_URL}/api/messages`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ name: name || role, text: chatText.trim() })\n    });\n    setChatText(\"\");\n  }\n\n  // ---------- UI ----------\n  function Landing() {\n    return (\n      <div className=\"center-screen\">\n        <h1>Welcome to the Live Polling System</h1>\n        <p className=\"muted\">Please select your role</p>\n        <div className=\"role-cards\">\n          <button type=\"button\" className=\"role-card\" onClick={() => setRole(\"student\")}>\n            <h3>I’m a Student</h3>\n          </button>\n          <button type=\"button\" className=\"role-card\" onClick={() => setRole(\"teacher\")}>\n            <h3>I’m a Teacher</h3>\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  function StudentEnterName() {\n    return (\n      <div className=\"panel center-panel\">\n        <h2>Enter your Name</h2>\n        <input\n          className=\"input\"\n          type=\"text\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          placeholder=\"e.g., Rahul Bajaj\"\n        />\n        <button type=\"button\" className=\"primary\" onClick={joinAsStudent}>Continue</button>\n      </div>\n    );\n  }\n\n  function StudentPage() {\n    if (!activePoll) return <p>Waiting for teacher to start a poll…</p>;\n    return (\n      <div className=\"panel\">\n        <h3>{activePoll.question}</h3>\n        {activePoll.options.map((opt, i) => (\n          <button\n            type=\"button\"\n            key={i}\n            disabled={userHasAnsweredActive}\n            onClick={() => vote(activePoll._id, i)}\n          >\n            {opt}\n          </button>\n        ))}\n      </div>\n    );\n  }\n\n  function TeacherPage() {\n    return (\n      <div className=\"panel\">\n        <h3>Create Poll</h3>\n        <textarea\n          className=\"textarea\"\n          value={qText}\n          onChange={e => setQText(e.target.value)}\n          placeholder=\"Your question\"\n        />\n        {options.map((opt, i) => (\n          <input\n            key={i}\n            type=\"text\"\n            className=\"input\"\n            value={opt}\n            onChange={e => {\n              const arr = [...options];\n              arr[i] = e.target.value;\n              setOptions(arr);\n            }}\n            placeholder={`Option ${i + 1}`}\n          />\n        ))}\n        <button type=\"button\" className=\"ghost\" onClick={() => setOptions([...options, \"\"])}>+ Add Option</button>\n        <button type=\"button\" className=\"primary\" onClick={createPoll}>Ask Question</button>\n      </div>\n    );\n  }\n\n  // Main render\n  return (\n    <div className=\"App\">\n      {!role && <Landing />}\n      {role === \"student\" && !name && <StudentEnterName />}\n      {role === \"student\" && name && <StudentPage />}\n      {role === \"teacher\" && <TeacherPage />}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}