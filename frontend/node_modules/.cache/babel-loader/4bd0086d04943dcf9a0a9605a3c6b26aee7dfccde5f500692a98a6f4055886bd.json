{"ast":null,"code":"var _jsxFileName = \"e:\\\\Placement\\\\live-polling-system\\\\live-polling-system\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// App.js\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.NODE_ENV === \"production\" ? \"https://live-polling-system-qjpn.onrender.com\" : \"http://localhost:3001\";\nfunction useInterval(callback, delay) {\n  _s();\n  const savedRef = useRef();\n  useEffect(() => {\n    savedRef.current = callback;\n  }, [callback]);\n  useEffect(() => {\n    if (delay == null) return;\n    const id = setInterval(() => savedRef.current(), delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n_s(useInterval, \"w5A6FRbWPY8OWfdgwNZfZKbZH74=\");\nexport default function App() {\n  _s2();\n  // global app state\n  const [role, setRole] = useState(() => localStorage.getItem(\"role\") || \"\");\n  const [name, setName] = useState(() => localStorage.getItem(\"name\") || \"\");\n  const [students, setStudents] = useState([]);\n  const [polls, setPolls] = useState([]);\n  const [activePollId, setActivePollId] = useState(null);\n  const [messages, setMessages] = useState([]);\n\n  // teacher inputs\n  const [qText, setQText] = useState(\"\");\n  const [options, setOptions] = useState([\"\", \"\"]);\n  const [duration, setDuration] = useState(60);\n\n  // chat\n  const [chatText, setChatText] = useState(\"\");\n\n  // UI helpers\n  const activePoll = useMemo(() => activePollId ? polls.find(p => p._id === activePollId) : null, [polls, activePollId]);\n  const userHasAnsweredActive = useMemo(() => {\n    var _activePoll$answers;\n    if (!activePoll || !name) return false;\n    return !!((_activePoll$answers = activePoll.answers) !== null && _activePoll$answers !== void 0 && _activePoll$answers.some(a => a.studentName === name));\n  }, [activePoll, name]);\n  const secondsLeft = useMemo(() => {\n    if (!activePoll) return 0;\n    const end = new Date(activePoll.createdAt).getTime() + activePoll.durationSeconds * 1000;\n    const s = Math.max(0, Math.ceil((end - Date.now()) / 1000));\n    return s;\n  }, [activePoll]);\n\n  // ----------- load state -----------\n  async function loadState() {\n    try {\n      const res = await fetch(`${API_URL}/api/state`);\n      if (!res.ok) throw new Error(\"state error\");\n      const data = await res.json();\n      setStudents(data.students || []);\n      setPolls(data.polls || []);\n      setActivePollId(data.activePollId || null);\n      setMessages(data.messages || []);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  useEffect(() => {\n    loadState();\n  }, []);\n  useInterval(loadState, 1500); // simple polling to stay live\n\n  // ----------- student join -----------\n  async function joinAsStudent() {\n    if (!name.trim()) return;\n    const res = await fetch(`${API_URL}/api/students`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name.trim()\n      })\n    });\n    if (res.ok) {\n      localStorage.setItem(\"name\", name.trim());\n      localStorage.setItem(\"role\", \"student\");\n      setRole(\"student\");\n      await loadState();\n    }\n  }\n\n  // ----------- teacher create poll -----------\n  async function createPoll() {\n    const question = qText.trim();\n    const cleanOptions = options.map(o => o.trim()).filter(Boolean);\n    if (!question || cleanOptions.length < 2) {\n      alert(\"Enter a question and at least two options.\");\n      return;\n    }\n    const res = await fetch(`${API_URL}/api/polls`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        question,\n        options: cleanOptions,\n        durationSeconds: Number(duration)\n      })\n    });\n    if (res.status === 409) {\n      const msg = await res.json();\n      alert(msg.error || \"Cannot create a new poll yet.\");\n      return;\n    }\n    if (!res.ok) {\n      alert(\"Failed to create poll.\");\n      return;\n    }\n    setQText(\"\");\n    setOptions([\"\", \"\"]);\n    await loadState();\n  }\n\n  // ----------- student vote -----------\n  async function vote(pollId, optionIndex) {\n    if (!name) {\n      alert(\"Enter your name first.\");\n      return;\n    }\n    const res = await fetch(`${API_URL}/api/answers`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        pollId,\n        optionIndex,\n        studentName: name\n      })\n    });\n    if (!res.ok) {\n      const msg = await res.json().catch(() => ({}));\n      alert(msg.error || \"Unable to submit answer.\");\n    }\n    await loadState();\n  }\n\n  // ----------- teacher remove student -----------\n  async function kick(n) {\n    const res = await fetch(`${API_URL}/api/kick`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: n\n      })\n    });\n    if (!res.ok) alert(\"Failed to kick student\");\n    await loadState();\n  }\n\n  // ----------- chat -----------\n  async function sendChat() {\n    if (!chatText.trim()) return;\n    const res = await fetch(`${API_URL}/api/messages`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name || role || \"User\",\n        text: chatText.trim()\n      })\n    });\n    if (!res.ok) alert(\"Failed to send message\");\n    setChatText(\"\");\n    await loadState();\n  }\n\n  // ----------- UI building blocks -----------\n  function RoleCard({\n    title,\n    desc,\n    onClick\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"card\",\n      onClick: onClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-desc\",\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this);\n  }\n  function ResultBars({\n    poll\n  }) {\n    const total = (poll.counts || []).reduce((a, b) => a + b, 0);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: poll.options.map((opt, i) => {\n        var _poll$counts;\n        const count = ((_poll$counts = poll.counts) === null || _poll$counts === void 0 ? void 0 : _poll$counts[i]) || 0;\n        const pct = total ? Math.round(count / total * 100) : 0;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-label\",\n            children: [i + 1, \" \", opt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bar-wrap\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bar\",\n              style: {\n                width: `${pct}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pct\",\n            children: [pct, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this);\n  }\n\n  // ----------- Screens -----------\n  function Landing() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen landing\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Intervue Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub\",\n        children: \"Welcome to the Live Polling System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: [/*#__PURE__*/_jsxDEV(RoleCard, {\n          title: \"I\\u2019m a Student\",\n          desc: \"Submit your answers and view live results.\",\n          onClick: () => setRole(\"student\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RoleCard, {\n          title: \"I\\u2019m a Teacher\",\n          desc: \"Create and manage polls, monitor responses in real-time.\",\n          onClick: () => setRole(\"teacher\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this);\n  }\n  function StudentEnterName() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Let\\u2019s Get Started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Enter your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        placeholder: \"e.g., Rahul Bajaj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"primary\",\n        onClick: joinAsStudent,\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this);\n  }\n  function StudentWaiting() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen wait\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Wait for the teacher to ask questions..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatPanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this);\n  }\n  function StudentQuestion() {\n    if (!activePoll) return null;\n    const disabled = userHasAnsweredActive || activePoll.status !== 'active' || secondsLeft === 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen poll\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-head\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"q-label\",\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer\",\n            children: [String(Math.floor(secondsLeft / 60)).padStart(2, '0'), \":\", String(secondsLeft % 60).padStart(2, '0')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"question\",\n          children: [\"\\u201C\", activePoll.question, \"\\u201D\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: activePoll.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"option\",\n            disabled: disabled,\n            onClick: () => vote(activePoll._id, i),\n            children: [i + 1, \" \", opt]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: disabled ? \"Results below\" : \"Submit before the timer ends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), (activePoll.status !== 'active' || userHasAnsweredActive || secondsLeft === 0) && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ResultBars, {\n            poll: activePoll\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"muted\",\n            children: \"Wait for the teacher to ask a new question..\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatPanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this);\n  }\n  function TeacherDashboard() {\n    var _activePoll$answers2, _activePoll$answers3;\n    const canAskNew = !activePoll || activePoll.status !== 'active' || secondsLeft === 0 || (((_activePoll$answers2 = activePoll.answers) === null || _activePoll$answers2 === void 0 ? void 0 : _activePoll$answers2.length) || 0) >= students.length;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen teacher\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Create a Poll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Enter your question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"textarea\",\n            value: qText,\n            onChange: e => setQText(e.target.value),\n            maxLength: 100,\n            placeholder: \"Which planet is known as the Red Planet?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hint\",\n            children: [qText.length, \"/100\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"opt-list\",\n            children: [options.map((v, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"opt-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"opt-index\",\n                children: i + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input\",\n                value: v,\n                onChange: e => {\n                  const arr = [...options];\n                  arr[i] = e.target.value;\n                  setOptions(arr);\n                },\n                placeholder: `Option ${i + 1}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 19\n              }, this), options.length > 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"ghost danger\",\n                onClick: () => setOptions(options.filter((_, j) => j !== i)),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 21\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ghost\",\n              onClick: () => setOptions([...options, \"\"]),\n              children: \"+ Add More option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Time Limit (seconds)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"select\",\n            value: duration,\n            onChange: e => setDuration(Number(e.target.value)),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: 30,\n              children: \"30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 45,\n              children: \"45\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 60,\n              children: \"60\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 90,\n              children: \"90\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 120,\n              children: \"120\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"primary\",\n              disabled: !canAskNew,\n              onClick: createPoll,\n              children: \"Ask Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this), !canAskNew && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"muted small\",\n              children: \"You can ask a new question only after time ends or all students answer.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Live Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), activePoll ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"poll-head\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"q-label\",\n                children: \"Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"timer\",\n                children: [String(Math.floor(secondsLeft / 60)).padStart(2, '0'), \":\", String(secondsLeft % 60).padStart(2, '0')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question\",\n              children: [\"\\u201C\", activePoll.question, \"\\u201D\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ResultBars, {\n              poll: activePoll\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"muted small\",\n              children: [((_activePoll$answers3 = activePoll.answers) === null || _activePoll$answers3 === void 0 ? void 0 : _activePoll$answers3.length) || 0, \"/\", students.length, \" answered\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"muted\",\n            children: \"No active poll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Participants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list\",\n            children: students.map(n => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"ghost danger\",\n                onClick: () => kick(n),\n                children: \"Kick out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this)]\n            }, n, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChatPanel, {\n            compact: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"View Poll History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"history\",\n            children: [polls.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"muted\",\n              children: \"No polls yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 38\n            }, this), polls.filter(p => p.status !== 'active').map((p, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"history-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"history-title\",\n                children: [\"Question \", idx + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"history-question\",\n                children: [\"\\u201C\", p.question, \"\\u201D\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ResultBars, {\n                poll: p\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this)]\n            }, p._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this);\n  }\n  function ChatPanel({\n    compact = false\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat ${compact ? 'compact' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-list\",\n        children: messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-name\",\n            children: m.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-text\",\n            children: m.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          value: chatText,\n          placeholder: \"Type a message\\u2026\",\n          onChange: e => setChatText(e.target.value),\n          onKeyDown: e => {\n            if (e.key === 'Enter') sendChat();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary\",\n          onClick: sendChat,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this);\n  }\n\n  // ----------- main render -----------\n  if (!role) return /*#__PURE__*/_jsxDEV(Landing, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 422,\n    columnNumber: 21\n  }, this);\n  if (role === \"student\" && !localStorage.getItem(\"name\")) {\n    return /*#__PURE__*/_jsxDEV(StudentEnterName, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 12\n    }, this);\n  }\n  if (role === \"student\") {\n    if (!activePoll) return /*#__PURE__*/_jsxDEV(StudentWaiting, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 29\n    }, this);\n    return /*#__PURE__*/_jsxDEV(StudentQuestion, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 12\n    }, this);\n  }\n  if (role === \"teacher\") {\n    return /*#__PURE__*/_jsxDEV(TeacherDashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Landing, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 437,\n    columnNumber: 10\n  }, this);\n}\n_s2(App, \"icHdwdRWif0LEfad2mBSQ6Yl2cQ=\", false, function () {\n  return [useInterval];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","NODE_ENV","useInterval","callback","delay","_s","savedRef","current","id","setInterval","clearInterval","App","_s2","role","setRole","localStorage","getItem","name","setName","students","setStudents","polls","setPolls","activePollId","setActivePollId","messages","setMessages","qText","setQText","options","setOptions","duration","setDuration","chatText","setChatText","activePoll","find","p","_id","userHasAnsweredActive","_activePoll$answers","answers","some","a","studentName","secondsLeft","end","Date","createdAt","getTime","durationSeconds","s","Math","max","ceil","now","loadState","res","fetch","ok","Error","data","json","e","console","error","joinAsStudent","trim","method","headers","body","JSON","stringify","setItem","createPoll","question","cleanOptions","map","o","filter","Boolean","length","alert","Number","status","msg","vote","pollId","optionIndex","catch","kick","n","sendChat","text","RoleCard","title","desc","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ResultBars","poll","total","counts","reduce","b","opt","i","_poll$counts","count","pct","round","style","width","Landing","StudentEnterName","value","onChange","target","placeholder","StudentWaiting","ChatPanel","StudentQuestion","disabled","String","floor","padStart","TeacherDashboard","_activePoll$answers2","_activePoll$answers3","canAskNew","maxLength","v","arr","_","j","compact","idx","m","onKeyDown","key","_c","$RefreshReg$"],"sources":["e:/Placement/live-polling-system/live-polling-system/frontend/src/App.js"],"sourcesContent":["// App.js\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport \"./App.css\";\n\nconst API_URL =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://live-polling-system-qjpn.onrender.com\"\n    : \"http://localhost:3001\";\n\nfunction useInterval(callback, delay) {\n  const savedRef = useRef();\n  useEffect(() => { savedRef.current = callback; }, [callback]);\n  useEffect(() => {\n    if (delay == null) return;\n    const id = setInterval(() => savedRef.current(), delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport default function App() {\n  // global app state\n  const [role, setRole] = useState(() => localStorage.getItem(\"role\") || \"\");\n  const [name, setName] = useState(() => localStorage.getItem(\"name\") || \"\");\n  const [students, setStudents] = useState([]);\n  const [polls, setPolls] = useState([]);\n  const [activePollId, setActivePollId] = useState(null);\n  const [messages, setMessages] = useState([]);\n\n  // teacher inputs\n  const [qText, setQText] = useState(\"\");\n  const [options, setOptions] = useState([\"\", \"\"]);\n  const [duration, setDuration] = useState(60);\n\n  // chat\n  const [chatText, setChatText] = useState(\"\");\n\n  // UI helpers\n  const activePoll = useMemo(\n    () => (activePollId ? polls.find(p => p._id === activePollId) : null),\n    [polls, activePollId]\n  );\n\n  const userHasAnsweredActive = useMemo(() => {\n    if (!activePoll || !name) return false;\n    return !!activePoll.answers?.some(a => a.studentName === name);\n  }, [activePoll, name]);\n\n  const secondsLeft = useMemo(() => {\n    if (!activePoll) return 0;\n    const end = new Date(activePoll.createdAt).getTime() + activePoll.durationSeconds * 1000;\n    const s = Math.max(0, Math.ceil((end - Date.now()) / 1000));\n    return s;\n  }, [activePoll]);\n\n  // ----------- load state -----------\n  async function loadState() {\n    try {\n      const res = await fetch(`${API_URL}/api/state`);\n      if (!res.ok) throw new Error(\"state error\");\n      const data = await res.json();\n      setStudents(data.students || []);\n      setPolls(data.polls || []);\n      setActivePollId(data.activePollId || null);\n      setMessages(data.messages || []);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  useEffect(() => { loadState(); }, []);\n  useInterval(loadState, 1500); // simple polling to stay live\n\n  // ----------- student join -----------\n  async function joinAsStudent() {\n    if (!name.trim()) return;\n    const res = await fetch(`${API_URL}/api/students`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ name: name.trim() })\n    });\n    if (res.ok) {\n      localStorage.setItem(\"name\", name.trim());\n      localStorage.setItem(\"role\", \"student\");\n      setRole(\"student\");\n      await loadState();\n    }\n  }\n\n  // ----------- teacher create poll -----------\n  async function createPoll() {\n    const question = qText.trim();\n    const cleanOptions = options.map(o => o.trim()).filter(Boolean);\n    if (!question || cleanOptions.length < 2) {\n      alert(\"Enter a question and at least two options.\");\n      return;\n    }\n    const res = await fetch(`${API_URL}/api/polls`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ question, options: cleanOptions, durationSeconds: Number(duration) })\n    });\n    if (res.status === 409) {\n      const msg = await res.json();\n      alert(msg.error || \"Cannot create a new poll yet.\");\n      return;\n    }\n    if (!res.ok) {\n      alert(\"Failed to create poll.\");\n      return;\n    }\n    setQText(\"\");\n    setOptions([\"\", \"\"]);\n    await loadState();\n  }\n\n  // ----------- student vote -----------\n  async function vote(pollId, optionIndex) {\n    if (!name) {\n      alert(\"Enter your name first.\");\n      return;\n    }\n    const res = await fetch(`${API_URL}/api/answers`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ pollId, optionIndex, studentName: name })\n    });\n    if (!res.ok) {\n      const msg = await res.json().catch(() => ({}));\n      alert(msg.error || \"Unable to submit answer.\");\n    }\n    await loadState();\n  }\n\n  // ----------- teacher remove student -----------\n  async function kick(n) {\n    const res = await fetch(`${API_URL}/api/kick`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ name: n })\n    });\n    if (!res.ok) alert(\"Failed to kick student\");\n    await loadState();\n  }\n\n  // ----------- chat -----------\n  async function sendChat() {\n    if (!chatText.trim()) return;\n    const res = await fetch(`${API_URL}/api/messages`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ name: name || (role || \"User\"), text: chatText.trim() })\n    });\n    if (!res.ok) alert(\"Failed to send message\");\n    setChatText(\"\");\n    await loadState();\n  }\n\n  // ----------- UI building blocks -----------\n  function RoleCard({ title, desc, onClick }) {\n    return (\n      <button className=\"card\" onClick={onClick}>\n        <div className=\"card-title\">{title}</div>\n        <div className=\"card-desc\">{desc}</div>\n      </button>\n    );\n  }\n\n  function ResultBars({ poll }) {\n    const total = (poll.counts || []).reduce((a, b) => a + b, 0);\n    return (\n      <div className=\"results\">\n        {poll.options.map((opt, i) => {\n          const count = poll.counts?.[i] || 0;\n          const pct = total ? Math.round((count / total) * 100) : 0;\n          return (\n            <div className=\"result-row\" key={i}>\n              <div className=\"result-label\">{i + 1} {opt}</div>\n              <div className=\"bar-wrap\">\n                <div className=\"bar\" style={{ width: `${pct}%` }} />\n              </div>\n              <div className=\"pct\">{pct}%</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  // ----------- Screens -----------\n  function Landing() {\n    return (\n      <div className=\"screen landing\">\n        <h1>Intervue Poll</h1>\n        <p className=\"sub\">Welcome to the Live Polling System</p>\n        <div className=\"cards\">\n          <RoleCard\n            title=\"I’m a Student\"\n            desc=\"Submit your answers and view live results.\"\n            onClick={() => setRole(\"student\")}\n          />\n          <RoleCard\n            title=\"I’m a Teacher\"\n            desc=\"Create and manage polls, monitor responses in real-time.\"\n            onClick={() => setRole(\"teacher\")}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function StudentEnterName() {\n    return (\n      <div className=\"screen form\">\n        <h2>Let’s Get Started</h2>\n        <label className=\"label\">Enter your Name</label>\n        <input\n          className=\"input\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          placeholder=\"e.g., Rahul Bajaj\"\n        />\n        <button className=\"primary\" onClick={joinAsStudent}>Continue</button>\n      </div>\n    );\n  }\n\n  function StudentWaiting() {\n    return (\n      <div className=\"screen wait\">\n        <h2>Wait for the teacher to ask questions..</h2>\n        <ChatPanel />\n      </div>\n    );\n  }\n\n  function StudentQuestion() {\n    if (!activePoll) return null;\n    const disabled = userHasAnsweredActive || activePoll.status !== 'active' || secondsLeft === 0;\n\n    return (\n      <div className=\"screen poll\">\n        <div className=\"poll-card\">\n          <div className=\"poll-head\">\n            <div className=\"q-label\">Question</div>\n            <div className=\"timer\">{String(Math.floor(secondsLeft / 60)).padStart(2,'0')}:{String(secondsLeft % 60).padStart(2,'0')}</div>\n          </div>\n          <h3 className=\"question\">“{activePoll.question}”</h3>\n          <div className=\"options\">\n            {activePoll.options.map((opt, i) => (\n              <button\n                key={i}\n                className=\"option\"\n                disabled={disabled}\n                onClick={() => vote(activePoll._id, i)}\n              >\n                {i + 1} {opt}\n              </button>\n            ))}\n          </div>\n          <div className=\"info\">\n            {disabled ? \"Results below\" : \"Submit before the timer ends\"}\n          </div>\n          {(activePoll.status !== 'active' || userHasAnsweredActive || secondsLeft === 0) && (\n            <>\n              <ResultBars poll={activePoll} />\n              <div className=\"muted\">Wait for the teacher to ask a new question..</div>\n            </>\n          )}\n        </div>\n        <ChatPanel />\n      </div>\n    );\n  }\n\n  function TeacherDashboard() {\n    const canAskNew =\n      !activePoll ||\n      activePoll.status !== 'active' ||\n      secondsLeft === 0 ||\n      (activePoll.answers?.length || 0) >= students.length;\n\n    return (\n      <div className=\"screen teacher\">\n        <div className=\"grid\">\n          <div className=\"panel\">\n            <h3>Create a Poll</h3>\n            <label className=\"label\">Enter your question</label>\n            <textarea\n              className=\"textarea\"\n              value={qText}\n              onChange={e => setQText(e.target.value)}\n              maxLength={100}\n              placeholder=\"Which planet is known as the Red Planet?\"\n            />\n            <div className=\"hint\">{qText.length}/100</div>\n\n            <label className=\"label\">Options</label>\n            <div className=\"opt-list\">\n              {options.map((v, i) => (\n                <div className=\"opt-row\" key={i}>\n                  <span className=\"opt-index\">{i + 1}</span>\n                  <input\n                    className=\"input\"\n                    value={v}\n                    onChange={e => {\n                      const arr = [...options];\n                      arr[i] = e.target.value;\n                      setOptions(arr);\n                    }}\n                    placeholder={`Option ${i + 1}`}\n                  />\n                  {options.length > 2 && (\n                    <button\n                      className=\"ghost danger\"\n                      onClick={() => setOptions(options.filter((_, j) => j !== i))}\n                    >\n                      Remove\n                    </button>\n                  )}\n                </div>\n              ))}\n              <button className=\"ghost\" onClick={() => setOptions([...options, \"\"])}>+ Add More option</button>\n            </div>\n\n            <label className=\"label\">Time Limit (seconds)</label>\n            <select className=\"select\" value={duration} onChange={e => setDuration(Number(e.target.value))}>\n              <option value={30}>30</option>\n              <option value={45}>45</option>\n              <option value={60}>60</option>\n              <option value={90}>90</option>\n              <option value={120}>120</option>\n            </select>\n\n            <div className=\"row\">\n              <button className=\"primary\" disabled={!canAskNew} onClick={createPoll}>\n                Ask Question\n              </button>\n              {!canAskNew && <span className=\"muted small\">You can ask a new question only after time ends or all students answer.</span>}\n            </div>\n          </div>\n\n          <div className=\"panel\">\n            <h3>Live Results</h3>\n            {activePoll ? (\n              <>\n                <div className=\"poll-head\">\n                  <div className=\"q-label\">Question</div>\n                  <div className=\"timer\">{String(Math.floor(secondsLeft / 60)).padStart(2,'0')}:{String(secondsLeft % 60).padStart(2,'0')}</div>\n                </div>\n                <div className=\"question\">“{activePoll.question}”</div>\n                <ResultBars poll={activePoll} />\n                <div className=\"muted small\">\n                  {activePoll.answers?.length || 0}/{students.length} answered\n                </div>\n              </>\n            ) : (\n              <div className=\"muted\">No active poll</div>\n            )}\n          </div>\n\n          <div className=\"panel\">\n            <h3>Participants</h3>\n            <ul className=\"list\">\n              {students.map(n => (\n                <li key={n} className=\"list-row\">\n                  <span>{n}</span>\n                  <button className=\"ghost danger\" onClick={() => kick(n)}>Kick out</button>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <div className=\"panel\">\n            <h3>Chat</h3>\n            <ChatPanel compact />\n          </div>\n\n          <div className=\"panel\">\n            <h3>View Poll History</h3>\n            <div className=\"history\">\n              {polls.length === 0 && <div className=\"muted\">No polls yet</div>}\n              {polls.filter(p => p.status !== 'active').map((p, idx) => (\n                <div key={p._id} className=\"history-item\">\n                  <div className=\"history-title\">Question {idx + 1}</div>\n                  <div className=\"history-question\">“{p.question}”</div>\n                  <ResultBars poll={p} />\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function ChatPanel({ compact = false }) {\n    return (\n      <div className={`chat ${compact ? 'compact' : ''}`}>\n        <div className=\"chat-list\">\n          {messages.map((m, i) => (\n            <div key={i} className=\"chat-item\">\n              <div className=\"chat-name\">{m.name}</div>\n              <div className=\"chat-text\">{m.text}</div>\n            </div>\n          ))}\n        </div>\n        <div className=\"chat-input-row\">\n          <input\n            className=\"input\"\n            value={chatText}\n            placeholder=\"Type a message…\"\n            onChange={e => setChatText(e.target.value)}\n            onKeyDown={e => { if (e.key === 'Enter') sendChat(); }}\n          />\n          <button className=\"primary\" onClick={sendChat}>Send</button>\n        </div>\n      </div>\n    );\n  }\n\n  // ----------- main render -----------\n  if (!role) return <Landing />;\n\n  if (role === \"student\" && !localStorage.getItem(\"name\")) {\n    return <StudentEnterName />;\n  }\n\n  if (role === \"student\") {\n    if (!activePoll) return <StudentWaiting />;\n    return <StudentQuestion />;\n  }\n\n  if (role === \"teacher\") {\n    return <TeacherDashboard />;\n  }\n\n  return <Landing />;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}