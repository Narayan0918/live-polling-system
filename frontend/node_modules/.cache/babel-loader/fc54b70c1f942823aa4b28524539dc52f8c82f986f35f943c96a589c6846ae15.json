{"ast":null,"code":"var _jsxFileName = \"e:\\\\Placement\\\\live-polling-system\\\\live-polling-system\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/App.js\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport API_URL from \"./config\";\nimport \"../public/\";\n\n/* polling hook */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useInterval(callback, delay) {\n  _s();\n  const savedRef = useRef();\n  useEffect(() => {\n    savedRef.current = callback;\n  }, [callback]);\n  useEffect(() => {\n    if (delay == null) return;\n    const id = setInterval(() => savedRef.current(), delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\n/* Navbar */\n_s(useInterval, \"w5A6FRbWPY8OWfdgwNZfZKbZH74=\");\nfunction Navbar({\n  name,\n  role\n}) {\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"nav-logo\",\n        children: \"Intervue Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-links\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"nav-link\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/student\",\n          className: \"nav-link\",\n          children: \"Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/teacher\",\n          className: \"nav-link\",\n          children: \"Teacher\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-right\",\n      children: name && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [\"Signed in as \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"user-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 26\n        }, this), \" (\", role, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n// Add a Footer component\n_c = Navbar;\nfunction Footer() {\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    className: \"footer\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Intervue Poll \\xA9 \", new Date().getFullYear(), \" - Real-time polling for education\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Footer;\nexport default function App() {\n  _s2();\n  /* local persisted user info */\n  const [role, setRole] = useState(localStorage.getItem(\"role\") || \"\");\n  const [name, setName] = useState(localStorage.getItem(\"name\") || \"\");\n\n  /* server-driven state (polling updates only these) */\n  const [students, setStudents] = useState([]);\n  const [polls, setPolls] = useState([]);\n  const [activePollId, setActivePollId] = useState(null);\n  const [messages, setMessages] = useState([]);\n\n  /* local input states (never reset by polling) */\n  const [qText, setQText] = useState(\"\");\n  const [options, setOptions] = useState([\"\", \"\"]);\n  const [duration, setDuration] = useState(60);\n  const [chatText, setChatText] = useState(\"\");\n\n  /* derived */\n  const activePoll = useMemo(() => polls.find(p => String(p._id) === String(activePollId)) || null, [polls, activePollId]);\n  const userHasAnsweredActive = useMemo(() => {\n    if (!activePoll || !name) return false;\n    return !!(activePoll.answers || []).find(a => a.studentName === name);\n  }, [activePoll, name]);\n  const secondsLeft = useMemo(() => {\n    if (!activePoll) return 0;\n    const end = new Date(activePoll.createdAt).getTime() + (Number(activePoll.durationSeconds) || 0) * 1000;\n    return Math.max(0, Math.ceil((end - Date.now()) / 1000));\n  }, [activePoll]);\n\n  /* fetch server state */\n  async function loadState() {\n    try {\n      const res = await fetch(`${API_URL}/api/state`);\n      if (!res.ok) return;\n      const data = await res.json();\n      // âœ… only update server-driven state\n      setStudents(data.students || []);\n      setPolls(data.polls || []);\n      setActivePollId(data.activePollId || null);\n      setMessages(data.messages || []);\n    } catch (e) {\n      console.warn(\"loadState error\", e);\n    }\n  }\n  useEffect(() => {\n    loadState();\n  }, []);\n  useInterval(loadState, 1500);\n\n  /* actions */\n  async function joinAsStudent() {\n    if (!name.trim()) return alert(\"Enter your name\");\n    try {\n      await fetch(`${API_URL}/api/students`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: name.trim()\n        })\n      });\n    } catch (e) {\n      console.warn(\"join error\", e);\n    } finally {\n      localStorage.setItem(\"role\", \"student\");\n      localStorage.setItem(\"name\", name.trim());\n      setRole(\"student\");\n    }\n  }\n  async function createPoll() {\n    const clean = options.map(o => o.trim()).filter(Boolean);\n    if (!qText.trim() || clean.length < 2) return alert(\"Enter a question and at least 2 options\");\n    try {\n      await fetch(`${API_URL}/api/polls`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          question: qText.trim(),\n          options: clean,\n          durationSeconds: duration\n        })\n      });\n      // reset local inputs\n      setQText(\"\");\n      setOptions([\"\", \"\"]);\n      setDuration(60);\n      loadState();\n    } catch (e) {\n      console.warn(\"createPoll error\", e);\n    }\n  }\n  async function vote(pollId, optionIndex) {\n    try {\n      await fetch(`${API_URL}/api/answers`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          pollId,\n          optionIndex,\n          studentName: name\n        })\n      });\n      loadState();\n    } catch (e) {\n      console.warn(\"vote error\", e);\n    }\n  }\n  async function kick(n) {\n    try {\n      await fetch(`${API_URL}/api/kick`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: n\n        })\n      });\n      loadState();\n    } catch (e) {\n      console.warn(\"kick error\", e);\n    }\n  }\n  async function sendChat() {\n    if (!chatText.trim()) return;\n    try {\n      await fetch(`${API_URL}/api/messages`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: name || role,\n          text: chatText.trim()\n        })\n      });\n      setChatText(\"\");\n      loadState();\n    } catch (e) {\n      console.warn(\"chat error\", e);\n    }\n  }\n\n  /* helpers */\n  function ResultBars({\n    poll\n  }) {\n    const total = (poll.counts || []).reduce((a, b) => a + b, 0);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: poll.options.map((opt, i) => {\n        var _poll$counts;\n        const count = ((_poll$counts = poll.counts) === null || _poll$counts === void 0 ? void 0 : _poll$counts[i]) || 0;\n        const pct = total ? Math.round(count / total * 100) : 0;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-label\",\n            children: [i + 1, \". \", opt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bar-wrap\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bar\",\n              style: {\n                width: `${pct}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pct\",\n            children: [pct, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this);\n  }\n  function ChatPanel() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-list\",\n        children: messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: [m.name, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 70\n          }, this), \" \", m.text]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 35\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input\",\n          value: chatText,\n          onChange: e => setChatText(e.target.value),\n          placeholder: \"Type a message\\u2026\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"primary\",\n          onClick: sendChat,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this);\n  }\n\n  /* pages */\n  function HomePage() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"landing\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Intervue Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"muted\",\n        children: \"Use the navigation bar above to join as a student or manage polls as a teacher.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this);\n  }\n  function StudentPage() {\n    if (!name) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel center-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Enter your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"e.g. Rahul Bajaj\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          style: {\n            marginTop: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"primary\",\n            onClick: joinAsStudent,\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"ghost\",\n            onClick: () => {\n              setName(\"\");\n              setRole(\"\");\n              localStorage.clear();\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this);\n    }\n    if (!activePoll) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"muted\",\n        children: \"Wait for the teacher to start a poll\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 52\n      }, this), /*#__PURE__*/_jsxDEV(ChatPanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 114\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 29\n    }, this);\n    const disabled = userHasAnsweredActive || secondsLeft <= 0 || activePoll.status !== \"active\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-head\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: activePoll.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timer\",\n          children: [secondsLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: activePoll.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"option\",\n          disabled: disabled,\n          onClick: () => vote(activePoll._id, i),\n          children: opt\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), disabled && /*#__PURE__*/_jsxDEV(ResultBars, {\n        poll: activePoll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(ChatPanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this);\n  }\n  function TeacherPage() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"teacher\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create Poll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"textarea\",\n          value: qText,\n          onChange: e => setQText(e.target.value),\n          placeholder: \"Enter your question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input\",\n          value: opt,\n          onChange: e => {\n            const arr = [...options];\n            arr[i] = e.target.value;\n            setOptions(arr);\n          },\n          placeholder: `Option ${i + 1}`\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"ghost\",\n            onClick: () => setOptions(prev => [...prev, \"\"]),\n            children: \"+ Add option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"select\",\n            value: duration,\n            onChange: e => setDuration(Number(e.target.value)),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: 30,\n              children: \"30s\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 60,\n              children: \"60s\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 90,\n              children: \"90s\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"primary\",\n            onClick: createPoll,\n            children: \"Ask Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Live Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), activePoll ? /*#__PURE__*/_jsxDEV(ResultBars, {\n          poll: activePoll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"muted\",\n          children: \"No active poll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Participants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"participants-list\",\n          children: students.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"participant-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: s\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"ghost\",\n                onClick: () => kick(s),\n                children: \"Kick\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this)]\n          }, s, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChatPanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Poll History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), polls.filter(p => p.status !== \"active\").length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"muted\",\n          children: \"No poll history yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 69\n        }, this), polls.filter(p => p.status !== \"active\").map((p, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"Q\", i + 1, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this), \" \", p.question, /*#__PURE__*/_jsxDEV(ResultBars, {\n            poll: p\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this)]\n        }, p._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this);\n  }\n\n  /* render */\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      name: name,\n      role: role\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/student\",\n          element: /*#__PURE__*/_jsxDEV(StudentPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/teacher\",\n          element: /*#__PURE__*/_jsxDEV(TeacherPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 351,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"LHsvX1CeWmEBJwc7OmMVWzqBWQk=\", false, function () {\n  return [useInterval];\n});\n_c3 = App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Navbar\");\n$RefreshReg$(_c2, \"Footer\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","BrowserRouter","Router","Routes","Route","Link","API_URL","jsxDEV","_jsxDEV","useInterval","callback","delay","_s","savedRef","current","id","setInterval","clearInterval","Navbar","name","role","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","Footer","Date","getFullYear","_c2","App","_s2","setRole","localStorage","getItem","setName","students","setStudents","polls","setPolls","activePollId","setActivePollId","messages","setMessages","qText","setQText","options","setOptions","duration","setDuration","chatText","setChatText","activePoll","find","p","String","_id","userHasAnsweredActive","answers","a","studentName","secondsLeft","end","createdAt","getTime","Number","durationSeconds","Math","max","ceil","now","loadState","res","fetch","ok","data","json","e","console","warn","joinAsStudent","trim","alert","method","headers","body","JSON","stringify","setItem","createPoll","clean","map","o","filter","Boolean","length","question","vote","pollId","optionIndex","kick","n","sendChat","text","ResultBars","poll","total","counts","reduce","b","opt","i","_poll$counts","count","pct","round","style","width","ChatPanel","m","type","value","onChange","target","placeholder","onClick","HomePage","StudentPage","marginTop","clear","disabled","status","TeacherPage","arr","prev","s","path","element","_c3","$RefreshReg$"],"sources":["e:/Placement/live-polling-system/live-polling-system/frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport API_URL from \"./config\";\nimport \"../public/\";\n\n/* polling hook */\nfunction useInterval(callback, delay) {\n  const savedRef = useRef();\n  useEffect(() => { savedRef.current = callback; }, [callback]);\n  useEffect(() => {\n    if (delay == null) return;\n    const id = setInterval(() => savedRef.current(), delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\n/* Navbar */\nfunction Navbar({ name, role }) {\n  return (\n    <nav className=\"navbar\">\n      <div className=\"nav-left\">\n        <h2 className=\"nav-logo\">Intervue Poll</h2>\n        <div className=\"nav-links\">\n          <Link to=\"/\" className=\"nav-link\">Home</Link>\n          <Link to=\"/student\" className=\"nav-link\">Student</Link>\n          <Link to=\"/teacher\" className=\"nav-link\">Teacher</Link>\n        </div>\n      </div>\n      <div className=\"nav-right\">\n        {name && (\n          <div className=\"user-info\">\n            Signed in as <span className=\"user-name\">{name}</span> ({role})\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n}\n\n// Add a Footer component\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p>Intervue Poll &copy; {new Date().getFullYear()} - Real-time polling for education</p>\n    </footer>\n  );\n}\n\nexport default function App() {\n  /* local persisted user info */\n  const [role, setRole] = useState(localStorage.getItem(\"role\") || \"\");\n  const [name, setName] = useState(localStorage.getItem(\"name\") || \"\");\n\n  /* server-driven state (polling updates only these) */\n  const [students, setStudents] = useState([]);\n  const [polls, setPolls] = useState([]);\n  const [activePollId, setActivePollId] = useState(null);\n  const [messages, setMessages] = useState([]);\n\n  /* local input states (never reset by polling) */\n  const [qText, setQText] = useState(\"\");\n  const [options, setOptions] = useState([\"\", \"\"]);\n  const [duration, setDuration] = useState(60);\n  const [chatText, setChatText] = useState(\"\");\n\n  /* derived */\n  const activePoll = useMemo(\n    () => polls.find(p => String(p._id) === String(activePollId)) || null,\n    [polls, activePollId]\n  );\n\n  const userHasAnsweredActive = useMemo(() => {\n    if (!activePoll || !name) return false;\n    return !!(activePoll.answers || []).find(a => a.studentName === name);\n  }, [activePoll, name]);\n\n  const secondsLeft = useMemo(() => {\n    if (!activePoll) return 0;\n    const end = new Date(activePoll.createdAt).getTime() + (Number(activePoll.durationSeconds) || 0) * 1000;\n    return Math.max(0, Math.ceil((end - Date.now()) / 1000));\n  }, [activePoll]);\n\n  /* fetch server state */\n  async function loadState() {\n    try {\n      const res = await fetch(`${API_URL}/api/state`);\n      if (!res.ok) return;\n      const data = await res.json();\n      // âœ… only update server-driven state\n      setStudents(data.students || []);\n      setPolls(data.polls || []);\n      setActivePollId(data.activePollId || null);\n      setMessages(data.messages || []);\n    } catch (e) {\n      console.warn(\"loadState error\", e);\n    }\n  }\n\n  useEffect(() => { loadState(); }, []);\n  useInterval(loadState, 1500);\n\n  /* actions */\n  async function joinAsStudent() {\n    if (!name.trim()) return alert(\"Enter your name\");\n    try {\n      await fetch(`${API_URL}/api/students`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ name: name.trim() })\n      });\n    } catch (e) {\n      console.warn(\"join error\", e);\n    } finally {\n      localStorage.setItem(\"role\", \"student\");\n      localStorage.setItem(\"name\", name.trim());\n      setRole(\"student\");\n    }\n  }\n\n  async function createPoll() {\n    const clean = options.map(o => o.trim()).filter(Boolean);\n    if (!qText.trim() || clean.length < 2) return alert(\"Enter a question and at least 2 options\");\n    try {\n      await fetch(`${API_URL}/api/polls`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ question: qText.trim(), options: clean, durationSeconds: duration })\n      });\n      // reset local inputs\n      setQText(\"\");\n      setOptions([\"\", \"\"]);\n      setDuration(60);\n      loadState();\n    } catch (e) {\n      console.warn(\"createPoll error\", e);\n    }\n  }\n\n  async function vote(pollId, optionIndex) {\n    try {\n      await fetch(`${API_URL}/api/answers`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ pollId, optionIndex, studentName: name })\n      });\n      loadState();\n    } catch (e) {\n      console.warn(\"vote error\", e);\n    }\n  }\n\n  async function kick(n) {\n    try {\n      await fetch(`${API_URL}/api/kick`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ name: n })\n      });\n      loadState();\n    } catch (e) {\n      console.warn(\"kick error\", e);\n    }\n  }\n\n  async function sendChat() {\n    if (!chatText.trim()) return;\n    try {\n      await fetch(`${API_URL}/api/messages`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ name: name || role, text: chatText.trim() })\n      });\n      setChatText(\"\");\n      loadState();\n    } catch (e) {\n      console.warn(\"chat error\", e);\n    }\n  }\n\n  /* helpers */\n  function ResultBars({ poll }) {\n    const total = (poll.counts || []).reduce((a, b) => a + b, 0);\n    return (\n      <div className=\"results\">\n        {poll.options.map((opt, i) => {\n          const count = poll.counts?.[i] || 0;\n          const pct = total ? Math.round((count / total) * 100) : 0;\n          return (\n            <div key={i} className=\"result-row\">\n              <div className=\"result-label\">{i + 1}. {opt}</div>\n              <div className=\"bar-wrap\"><div className=\"bar\" style={{ width: `${pct}%` }} /></div>\n              <div className=\"pct\">{pct}%</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  function ChatPanel() {\n    return (\n      <div className=\"chat\">\n        <div className=\"chat-list\">\n          {messages.map((m, i) => <div key={i} className=\"chat-item\"><b>{m.name}:</b> {m.text}</div>)}\n        </div>\n        <div className=\"chat-input\">\n          <input\n            type=\"text\"\n            className=\"input\"\n            value={chatText}\n            onChange={e => setChatText(e.target.value)}\n            placeholder=\"Type a messageâ€¦\"\n          />\n          <button type=\"button\" className=\"primary\" onClick={sendChat}>Send</button>\n        </div>\n      </div>\n    );\n  }\n\n  /* pages */\n  function HomePage() {\n    return (\n      <div className=\"landing\">\n        <h1>Welcome to Intervue Poll</h1>\n        <p className=\"muted\">Use the navigation bar above to join as a student or manage polls as a teacher.</p>\n      </div>\n    );\n  }\n\n  function StudentPage() {\n    if (!name) {\n      return (\n        <div className=\"panel center-panel\">\n          <h2>Enter your name</h2>\n          <input\n            type=\"text\"\n            className=\"input\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n            placeholder=\"e.g. Rahul Bajaj\"\n          />\n          <div className=\"row\" style={{ marginTop: 10 }}>\n            <button type=\"button\" className=\"primary\" onClick={joinAsStudent}>Continue</button>\n            <button type=\"button\" className=\"ghost\" onClick={() => { setName(\"\"); setRole(\"\"); localStorage.clear(); }}>Cancel</button>\n          </div>\n        </div>\n      );\n    }\n\n    if (!activePoll) return <div className=\"panel\"><p className=\"muted\">Wait for the teacher to start a pollâ€¦</p><ChatPanel /></div>;\n    const disabled = userHasAnsweredActive || secondsLeft <= 0 || activePoll.status !== \"active\";\n\n    return (\n      <div className=\"panel\">\n        <div className=\"poll-head\">\n          <h3>{activePoll.question}</h3>\n          <span className=\"timer\">{secondsLeft}s</span>\n        </div>\n        <div className=\"options\">\n          {activePoll.options.map((opt, i) => (\n            <button\n              type=\"button\"\n              key={i}\n              className=\"option\"\n              disabled={disabled}\n              onClick={() => vote(activePoll._id, i)}\n            >\n              {opt}\n            </button>\n          ))}\n        </div>\n        {disabled && <ResultBars poll={activePoll} />}\n        <ChatPanel />\n      </div>\n    );\n  }\n\n  function TeacherPage() {\n    return (\n      <div className=\"teacher\">\n        <div className=\"panel\">\n          <h3>Create Poll</h3>\n          <textarea\n            className=\"textarea\"\n            value={qText}\n            onChange={e => setQText(e.target.value)}\n            placeholder=\"Enter your question\"\n          />\n          {options.map((opt, i) => (\n            <input\n              key={i}\n              type=\"text\"\n              className=\"input\"\n              value={opt}\n              onChange={e => {\n                const arr = [...options]; arr[i] = e.target.value; setOptions(arr);\n              }}\n              placeholder={`Option ${i + 1}`}\n            />\n          ))}\n          <div className=\"row\">\n            <button type=\"button\" className=\"ghost\" onClick={() => setOptions(prev => [...prev, \"\"])}>+ Add option</button>\n            <select className=\"select\" value={duration} onChange={e => setDuration(Number(e.target.value))}>\n              <option value={30}>30s</option>\n              <option value={60}>60s</option>\n              <option value={90}>90s</option>\n            </select>\n            <button type=\"button\" className=\"primary\" onClick={createPoll}>Ask Question</button>\n          </div>\n        </div>\n\n        <div className=\"panel\">\n          <h3>Live Results</h3>\n          {activePoll ? <ResultBars poll={activePoll} /> : <p className=\"muted\">No active poll</p>}\n        </div>\n\n        <div className=\"panel\">\n          <h3>Participants</h3>\n          <ul className=\"participants-list\">\n            {students.map(s => (\n              <li key={s} className=\"participant-row\">\n                <div>{s}</div>\n                <div><button type=\"button\" className=\"ghost\" onClick={() => kick(s)}>Kick</button></div>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"panel\">\n          <h3>Chat</h3>\n          <ChatPanel />\n        </div>\n\n        <div className=\"panel\">\n          <h3>Poll History</h3>\n          {polls.filter(p => p.status !== \"active\").length === 0 && <div className=\"muted\">No poll history yet</div>}\n          {polls.filter(p => p.status !== \"active\").map((p, i) => (\n            <div key={p._id} className=\"history\">\n              <b>Q{i + 1}:</b> {p.question}\n              <ResultBars poll={p} />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  /* render */\n  return (\n    <Router>\n      <Navbar name={name} role={role} />\n      <div className=\"App\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/student\" element={<StudentPage />} />\n          <Route path=\"/teacher\" element={<TeacherPage />} />\n        </Routes>\n      </div>\n      <Footer />\n    </Router>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}